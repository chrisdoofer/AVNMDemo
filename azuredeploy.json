{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.9.1.41621",
      "templateHash": "10244323949179885615"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "AzureAdmin",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "copies": {
      "type": "int",
      "defaultValue": 5,
      "maxValue": 254,
      "minValue": 1,
      "metadata": {
        "description": "Number of VNETs and VMs to deploy"
      }
    },
    "vmsize": {
      "type": "string",
      "defaultValue": "Standard_A4_v2",
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2"
      ]
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "anm-vnet-",
      "metadata": {
        "description": "Prefix Name of VNETs"
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "sourceIPaddressRDP": {
      "type": "string",
      "defaultValue": "94.126.212.170",
      "metadata": {
        "description": "remote desktop source address"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "vmSubnet",
      "metadata": {
        "description": "Name of the subnet to create in the virtual network"
      }
    },
    "nicName": {
      "type": "string",
      "defaultValue": "VMNic-",
      "metadata": {
        "description": "Prefix name of the nic of the vm"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "VM-",
      "metadata": {
        "description": "Prefix name of the nic of the vm"
      }
    }
  },
  "resources": [
    {
      "copy": {
        "name": "virtualNetworkName_resource",
        "count": "[length(range(0, parameters('copies')))]"
      },
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-09-01",
      "name": "[format('{0}{1}', parameters('virtualNetworkName'), range(0, parameters('copies'))[copyIndex()])]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[format('10.0.{0}.0/24', range(0, parameters('copies'))[copyIndex()])]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[format('10.0.{0}.0/25', range(0, parameters('copies'))[copyIndex()])]",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'anm-nsg')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'anm-nsg')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "anm-nsg",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "rdp",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('sourceIPaddressRDP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "copy": {
        "name": "nicName_resource",
        "count": "[length(range(0, parameters('copies')))]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-09-01",
      "name": "[format('{0}{1}', parameters('nicName'), range(0, parameters('copies'))[copyIndex()])]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', format('{0}{1}', parameters('virtualNetworkName'), range(0, parameters('copies'))[copyIndex()]), parameters('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      },
      "dependsOn": [
        "virtualNetworkName_resource"
      ]
    },
    {
      "copy": {
        "name": "vmName_resource",
        "count": "[length(range(0, parameters('copies')))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[format('{0}{1}', parameters('vmName'), range(0, parameters('copies'))[copyIndex()])]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmsize')]"
        },
        "osProfile": {
          "computerName": "[format('{0}{1}', parameters('vmName'), range(0, parameters('copies'))[copyIndex()])]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[format('osDisk-{0}{1}', parameters('vmName'), range(0, parameters('copies'))[copyIndex()])]",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}{1}', parameters('nicName'), range(0, parameters('copies'))[copyIndex()]))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "dependsOn": [
        "nicName_resource"
      ]
    },
    {
      "copy": {
        "name": "vmName_Microsoft_Azure_NetworkWatcher",
        "count": "[length(range(0, parameters('copies')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}{1}/Microsoft.Azure.NetworkWatcher', parameters('vmName'), range(0, parameters('copies'))[copyIndex()])]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.NetworkWatcher",
        "type": "NetworkWatcherAgentWindows",
        "typeHandlerVersion": "1.4",
        "autoUpgradeMinorVersion": true
      },
      "dependsOn": [
        "vmName_resource"
      ]
    },
    {
      "copy": {
        "name": "vmName_IISExtension",
        "count": "[length(range(0, parameters('copies')))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}{1}/IISExtension', parameters('vmName'), range(0, parameters('copies'))[copyIndex()])]",
      "location": "[parameters('location')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "settings": {
          "commandToExecute": "powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)\""
        },
        "protectedSettings": {}
      },
      "dependsOn": [
        "vmName_resource"
      ]
    }
  ]
}